操作系统内核中,对接 easy-fs 文件系统的各种结构，它们自下而上可以分成这样几个层次：
1. 块设备驱动层：针对内核所要运行在的 qemu 或 k210 平台，我们需要将平台上的块设备驱动起来并实现
     easy-fs 所需的 BlockDevice Trait ，这样 easy-fs 才能将该块设备用作 easy-fs 镜像的载体。
2. easy-fs 层：站在内核的角度，只需知道它接受一个块设备 BlockDevice ，并可以在上面打开文件系统
    EasyFileSystem ，进而获取 Inode 核心数据结构，进行各种文件系统操作即可。
3. 内核索引节点层：在内核中需要将 easy-fs 提供的 Inode 进一步封装成 OSInode ，
    以表示进程中一个打开的常规文件。由于有很多种不同的打开方式，因此在 OSInode 中要维护一些额外的信息。
4. 文件描述符层：常规文件对应的 OSInode 是文件的内核内部表示，因此需要为它实现 File Trait 
    从而能够可以将它放入到进程文件描述符表中并通过 sys_read/write 系统调用进行读写。
5. 系统调用层：由于引入了常规文件这种文件类型，导致一些系统调用以及相关的内核机制需要进行一定的修改。